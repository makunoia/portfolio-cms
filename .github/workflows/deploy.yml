name: Deploy to DigitalOcean Droplet

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies using pnpm
        run: npm install -g pnpm && pnpm install

      - name: Load .env file
        uses: xom9ikk/dotenv@v2.3.0
        with:
          path: ./
          mode: production
          load-mode: strict

      - name: Build the project
        env:
          PORT: ${{ env.PORT }}
          DATABASE_URI: ${{ env.DATABASE_URI }}
          PAYLOAD_SECRET: ${{ env.PAYLOAD_SECRET }}
          CLOUDFLARE_ACCOUNT_ID: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_ACCESS_KEY_ID: ${{ env.CLOUDFLARE_ACCESS_KEY_ID }}
          CLOUDFLARE_SECRET_ACCESS_KEY: ${{ env.CLOUDFLARE_SECRET_ACCESS_KEY }}
          CLOUDFLARE_BUCKET_NAME: ${{ env.CLOUDFLARE_BUCKET_NAME }}
          CLOUDFLARE_BUCKET_PUBLIC_LINK: ${{ env.CLOUDFLARE_BUCKET_PUBLIC_LINK }}
          CLOUDFLARE_REGION: ${{ env.CLOUDFLARE_REGION }}
          NEXT_PUBLIC_BUILD_DATE: ${{ env.NEXT_PUBLIC_BUILD_DATE }}
          MIXPANEL_TOKEN: ${{ env.MIXPANEL_TOKEN }}
        run: pnpm run build

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_KEY }}
          source: "./.next/"
          target: "/var/www/portfolio-site/.next"

      - name: Restart your application
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_KEY }}
          script: |
            pm2 restart portfolio-site || pm2 start npm --name "portfolio-site" -- start
