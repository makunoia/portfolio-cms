/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    projects: Project;
    'project-tags': ProjectTag;
    'roles-on-projects': RolesOnProject;
    page: Page;
    'journal-entries': JournalEntry;
    'journal-entry-tags': JournalEntryTag;
    assets: Asset;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: string;
  title: string;
  shortDesc: string;
  longDesc: string;
  year?: string | null;
  tag: {
    relationTo: 'project-tags';
    value: string | ProjectTag;
  };
  roleOnProject: {
    relationTo: 'roles-on-projects';
    value: string | RolesOnProject;
  };
  projectStatus: 'ongoingProject' | 'delivered';
  yearDelivered?: string | null;
  isArchived?: boolean | null;
  isLocked?: boolean | null;
  password?: string | null;
  sections?:
    | {
        name?: string | null;
        content?: (ContentBlock | Showcase)[] | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "project-tags".
 */
export interface ProjectTag {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "roles-on-projects".
 */
export interface RolesOnProject {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  lead: string;
  content: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Showcase".
 */
export interface Showcase {
  image?: string | Asset | null;
  title: string;
  description: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'showcase';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assets".
 */
export interface Asset {
  id: string;
  name?: string | null;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page".
 */
export interface Page {
  id: string;
  name: string;
  header: string;
  copy?: string | null;
  content?: (KeyValue | BooleanData)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Key-Value".
 */
export interface KeyValue {
  key: string;
  value: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'key-value-pair';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BooleanData".
 */
export interface BooleanData {
  key: string;
  value: boolean;
  id?: string | null;
  blockName?: string | null;
  blockType: 'boolean-data';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "journal-entries".
 */
export interface JournalEntry {
  id: string;
  title?: string | null;
  gist?: string | null;
  date?: string | null;
  tag?: (string | null) | JournalEntryTag;
  content?: (ContentBlock | Showcase)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "journal-entry-tags".
 */
export interface JournalEntryTag {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}